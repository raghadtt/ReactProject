{"version":3,"sources":["components/card/card.js","components/card/index.js","components/popup/popup.js","components/popup/index.js","pages/board.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","name","index","Popup","useState","task_name","setTask_name","handleClick","toggle","class","onClick","placeholder","onChange","e","target","value","Board","pressed","setPressed","newTask","setNewTask","length","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAYeA,MATf,SAAcC,GAEV,OACI,qBAAKC,UAAU,OAAf,SACKD,EAAME,QCEJC,MANf,SAAeH,GACX,OACI,cAAC,EAAD,CAAME,KAAMF,EAAME,Q,OCwBXE,MAxBf,SAAeJ,GACX,MAAkCK,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKMC,EAAc,WAChBR,EAAMS,OAAOH,IAGjB,OACI,qBAAKI,MAAM,QAAX,SACI,sBAAKA,MAAM,gBAAX,UACI,uBAAMC,QAASH,EAAf,eAA8B,cAAC,IAAD,CAASP,UAAU,UAAjD,OACA,uBAAOC,KAAK,OAAOU,YAAY,iBAAiBC,SAXvC,SAACC,GAClBP,EAAaO,EAAEC,OAAOC,UAWd,wBAAQf,UAAU,aAAaU,QAASH,EAAxC,uBCXDL,MANf,SAAeH,GACX,OACI,cAAC,EAAD,CAAOS,OAAQT,EAAMS,U,MCgCdQ,MA/Bf,SAAejB,GACX,MAA8BK,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA8Bd,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KASA,OACI,sBAAKpB,UAAU,QAAf,UACI,4CAGA,sBAAKA,UAAU,OAAf,UACI,8BACuB,GAAlBmB,EAAQE,OAAc,KAAQF,EAAQG,KAAI,SAACC,GAAW,OAAQ,cAAC,EAAD,CAAMtB,KAAMsB,SAE/E,qBAAKvB,UAAU,MAAf,SACI,wBAAQA,UAAU,OAAOU,QAAS,kBAAMQ,GAAYD,IAApD,SACI,cAAC,IAAD,WAIXA,EAAU,cAAC,EAAD,CAAOT,OAtBL,SAACP,GAClBiB,GAAYD,GACA,IAARhB,GACAmB,EAAW,GAAD,mBAAKD,GAAL,CAAclB,QAmBqB,SCpB1CuB,MAVf,WACE,OACE,8BACE,iCACE,cAAC,EAAD,SCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5dcf4ae1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './card.scss';\r\n\r\nfunction Card(props) {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card';\r\n\r\nfunction index(props) {\r\n    return (\r\n        <Card name={props.name} />\r\n    );\r\n}\r\n\r\nexport default index;\r\n","import React, { useState } from 'react';\r\nimport './popup.scss'\r\nimport Card from '../card';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nfunction Popup(props) {\r\n    const [task_name, setTask_name] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setTask_name(e.target.value);\r\n    }\r\n    const handleClick = () => {\r\n        props.toggle(task_name);\r\n    }\r\n\r\n    return (\r\n        <div class=\"modal\">\r\n            <div class=\"modal_content\">\r\n                <span onClick={handleClick}>  <FaTimes className=\"close\" /> </span>\r\n                <input name=\"task\" placeholder=\"add new task..\" onChange={handleChange} />\r\n                <button className=\"add_button\" onClick={handleClick}>\r\n                    Add\r\n                </button>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport Popup from './popup';\r\n\r\nfunction index(props) {\r\n    return (\r\n        <Popup toggle={props.toggle} />\r\n    );\r\n}\r\n\r\nexport default index;\r\n","import { useState } from 'react';\r\nimport Popup from '../components/popup';\r\nimport Card from '../components/card';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport './board.scss';\r\n\r\nfunction Board(props) {\r\n    const [pressed, setPressed] = useState(false);\r\n    const [newTask, setNewTask] = useState([]);\r\n\r\n    const handle_popup = (name) => {\r\n        setPressed(!pressed)\r\n        if (name != \"\") {\r\n            setNewTask([...newTask, name]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <h1>\r\n                To-do list\r\n            </h1>\r\n            <div className=\"list\">\r\n                <div>\r\n                    {newTask.length == 0 ? null : (newTask.map((item) => { return (<Card name={item} />); }))}\r\n                </div>\r\n                <div className=\"add\">\r\n                    <button className=\"icon\" onClick={() => setPressed(!pressed)}>\r\n                        <FaPlus />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {pressed ? <Popup toggle={handle_popup} /> : null}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Board;\r\n","import Board from './pages/board';\n\nfunction App() {\n  return (\n    <div>\n      <header >\n        <Board />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}